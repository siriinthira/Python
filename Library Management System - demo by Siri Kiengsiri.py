# -*- coding: utf-8 -*-
"""FinalQuiz.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/11bRwp8969j-fJmUyArIjScVHliyUgEmh

Library Management System

(a) สืบค้นหนังสือ ตามชื่อหนังสือ ชื่อผู้แต่ง ปีที่พิมพ์ สำนักพิมพ์

(b) สามารถบันทึกรายการ ยืม หนังสือเพื่อไปใช้ทวงคืน
"""

authors={}
authors['Robert Sedgewick'] = ['Algorithm', 'Programming in Java','Computer Science']

titles = {}
titles['Algorithm'] = {'author':'Robert Sedgewick', 'status': 'borrowed'}

authors={}
authors['Robert Sedgewick'] = [{'title':'Algorithm','year':'1983','publisher': 'Addison-Wesley Pub','status':'borrowed'},{'title':'Programming in Java','status':'available'}]
authors['Robert Sedgewick'].append({'title':'Computer Science','year':'2015', 'publisher':'Addison-Wesley Professional','status':'borrowed'})

yearofrelease = {}
yearofrelease[1983] = {'author':'Robert Sedgewick', 'title':'Algorithm', 'publisher': 'Addison-Wesley Pub', 'status': 'borrowed'} 

publishers = {}
publishers['Addison-Wesley Professional'] = {'author':'Robert Sedgewick', 'title':'Computer Science', 'year':'2015','status': 'borrowed'} 

my_dict = {}
my_dict['Smith'] = ['Book Name']
my_dict['Smith'].append('Another Book Name')

def addBook(Name, Title):
    try:
        my_dict[Name].append(Title)
    except KeyError:
        my_dict[Name] = [Title]

print(authors['Robert Sedgewick'])
print(titles['Algorithm'])
print(yearofrelease[1983])


import sys;
if sys.version_info[0]>2: #Just making sure the program works with both Python 2.x and 3.x
    from queue import Queue
else:
    from Queue import Queue

q=Queue()
q.put('04/02/2009' + ' Algorithm by Robert Sedgewick was borrowed' ) #Put an item on the Queue.
q.put("10/02/2009" + ' Algorithm by Robert Sedgewick has returned')
q.put("11/03/2009" + ' Computer Science by Robert Sedgewick has borrowed')
q.put("20/03/2009" + ' Computer Science by Robert Sedgewick has returned')

while not q.empty(): #If it's empty, the program will stall if you try to get from it (that's why we're checking)
    print(q.get()) #Get an item from the Queue

"""Compare letters in python"""

first_list = ["E","v","i","l"]
second_list = ["V","i","l", "e"]
  
# Function to check parentheses
def compare(myStr):
    stack = []
    for i in myStr:
        if i in first_list:
            stack.append(i)
        elif i in second_list:
            pos = second_list.index(i)
            if ((len(stack) > 0) and
                (first_list[pos] == stack[len(stack)-1])):
                stack.pop()
            else:
                return string2,'and',string1, "are composed of the same characters"
    if len(stack) == 0:
        return "Unmatched"
    else:
        return string1, 'and' , string2,"are composed of the same characters"
  
# Driver code
string1 = (input("Enter word: ")) 
print(string1,"-", compare(string1))

string2 = (input("Enter word: ")) 
print(string2,"-", compare(string2))

"""Write a program to store positive integers and stop running when the input is a negative number then count all numbers received from the input"""

from collections import Counter
# list of numbers
numbers = []
neg_count = 0 

while True:
 num = int(input("Enter Number: ")) 
 if(num > 0):
  numbers.append(num)
 if(num < 0):
  print("This is a negative number") 
  neg_count+=1
  c = Counter(numbers)
  print("Negative numbers in the list: ", neg_count)
  break

pos_count = 0
# iterating each number in list
for num in numbers:  
    # checking condition
    if num >= 0:
        pos_count += 1
print("Positive numbers in the list: ", pos_count)
print(c)

"""Note:"""

from collections import Counter
MyList = ["a", "b", "a", "c", "c", "a", "c"]
c = Counter(MyList)
c
# Counter({'a': 3, 'c': 3, 'b': 1})

from collections import Counter
# list of numbers
numbers = []
negcount = 0 

while True:
 num = int(input("Enter Number: ")) 
 if(num > 0):
  numbers.append(num)
 if(num < 0):
  print("This is a negative number") 
  negcount+=1
  c = Counter(numbers)
  print("Negative numbers in the list: ", negcount)
  break

pos_count, neg_count = 0, 0
# iterating each number in list
for num in numbers:  
    # checking condition
    if num >= 0:
        pos_count += 1
print("Positive numbers in the list: ", pos_count)
print(c)